- name: "创建logstash组"
  group:
    name: "{{ logstash_group }}"
    state: present

- name: "创建用户logstash"
  user:
    group: "{{ logstash_group }}"
    name:  "{{ logstash_user }}"
        
- name: "创建安装目录"
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    mode: 0755
  with_items:
    - "{{ logstash_install_path }}"
    - "{{ logstash_path }}"

- name: 检测安装包是否存在
  stat: path={{ logstash_file }}
  register: logstash_package

- name: 下载安装包
  get_url: url=https://repo.huaweicloud.com/logstash/{{ logstash_version }}/logstash-{{ logstash_version }}.rpm  dest={{ soft_path }}/logstash-{{ logstash_version }}.rpm
  when: not logstash_package.stat.exists

- name: "安装logstash"
  shell: "cd {{ soft_path }} && rpm -ivh {{ logstash_file }}" 
  ignore_errors: true

- name: 添加节点1域名解析
  lineinfile:
    path: "/etc/hosts"
    line: "{{ groups['es-nodes'][0] }} es1.zhkj.com"

- name: 添加节点2域名解析
  lineinfile:
    path: "/etc/hosts"
    line: "{{ groups['es-nodes'][1] }} es2.zhkj.com"

- name: 添加节点3域名解析
  lineinfile:
    path: "/etc/hosts"
    line: "{{ groups['es-nodes'][2] }} es3.zhkj.com"


- name: "部署配置文件"
  template:
    src: logstash.yml
    dest: "{{ logstash_config_file }}"

- name: "配置收集日志文件"
  template:
    src: jtb.conf
    dest: "/etc/logstash/conf.d/jtb.conf"

- name: 分发jvm配置文件
  template: src=jvm.options.j2 dest=/etc/logstash/jvm.options backup=yes
  
- name: "启动logstash"
  service:
    name: logstash
    state: started
    enabled: true
    
- name: "以轮询的方式等待服务同步完成"
  shell: "systemctl status logstash|grep Active"
  register: logstash_status
  until: '"running" in logstash_status.stdout'
  retries: 8
  delay: 8
  tags: update_logstash
