- name: "创建目录"
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    recurse: true
  with_items:
    - "{{ zk_install_path }}"
    - "{{ zk_install_path }}/data"
    - "{{ zk_install_path }}/log"
    - "{{ zk_log_path }}"
    - "{{ bin_path }}"

- name: 检测zookeeper安装包是否存在
  stat: path={{ zk_file }}
  register: package_status

- name: 分发zookeeper安装包
  copy: src={{ zk_file }} dest={{ soft_path }}
  when: not package_status.stat.exists

- name: 解压安装包
  unarchive: src={{ zk_file }} dest={{ common_path }}

- name: "指定zk id"
  shell: "echo {{ myid }}  > {{ zk_data_dir }}/myid"

- name: "部署配置文件"
  template:
    src: zookeeper.properties
    dest: "{{ zk_config_path }}"
    backup: yes

- name: "部署启动脚本"
  copy: 
    src: "/data/ansible/shell/zookeeper"
    dest: "{{ bin_path }}/zookeeper"
    mode: 0755
      
- name: "启动服务"
  shell: "nohup {{ common_path }}/kafka_{{ zk_version }}/bin/zookeeper-server-start.sh \ 
          {{ zk_config_path }} > {{ zk_log_path }}/zookeeper.log 2>&1 &"
  tags: start_zookeeper
  when: inventory_hostname in groups['kafka-nodes']
  
- name: 以轮询的方式等待服务全部启动
  shell: "{{ bin_path }}/zookeeper status|grep Running"
  register: zookeeper_status
  until: '"Running" in zookeeper_status.stdout'
  retries: 3
  delay: 3
  when: inventory_hostname in groups['kafka-nodes']
  tags: start_zookeeper
