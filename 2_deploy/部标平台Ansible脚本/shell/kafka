#!/bin/bash
KAFKA_ROOT=/data/jtb/infra/kafka_2.12-2.2.0
CONFIG_PATH=/data/jtb/infra/kafka_2.12-2.2.0/config/server.properties
KAFKA_LOG=/data/jtb/logs/kafka/kafka.log

[ -d ${KAFKA_ROOT} ] || exit 1
[ -f ${CONFIG_PATH} ] || exit 2
[ -f ${KAFKA_LOG} ] || exit 3

check_status () {
   ps -ef|grep -v grep |grep -w "server.properties"  &> /dev/null
}

status () {
  check_status
  RETVAL=$?
  if [ $RETVAL -eq 0 ];then
     echo  -e "Kafka server is  \033[1;32mRunning...\033[0m"
  else 
     echo  -e "Kafka server is  \033[1;32mStopped\033[0m"
  fi
}

start () {
   check_status
   RETVAL=$?
   if [ $RETVAL -eq 0 ];then
      echo "Kafka server is Running..."
      exit 4
   else 
      nohup ${KAFKA_ROOT}/bin/kafka-server-start.sh ${KAFKA_ROOT}/config/server.properties > ${KAFKA_LOG} 2>&1 &
      sleep 2
      check_status
      if [ $? -eq 0 ];then
         echo -e "Kafka server is  \033[1;32mstart Successful\033[0m"
      else 
         echo -e "Kafka server is  \033[1;31mstart Failed\033[0m"
      fi
   fi
}
        
stop () {
   check_status
   RETVAL=$?
   if [ $RETVAL -eq 0 ];then
     ${KAFKA_ROOT}/bin/kafka-server-stop.sh
     sleep 5
     check_status
     if [ $? -eq 0 ];then
        echo -e "Kafka server is  \033[1;31mstop Failed\033[0m"
     else
        echo -e "Kafka server is  \033[1;32mstop Successful\033[0m"
     fi
   else
     echo  -e "Kafka server is  \033[1;32mNot Running\033[0m"
   fi
}
parameter=$1
case $parameter in
"start")
   start
   ;;
"stop")
   stop
   ;;
"restart")
   stop 
   start;;
"status")
  status
esac
