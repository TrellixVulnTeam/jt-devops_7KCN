server:
  port: 12000

spring:
  datasource:
    url: jdbc:mysql://10.111.30.9:3306/car_mp?useUnicode=true&characterEncoding=UTF-8
    username: root
    password: TZTUb75yH3
  kafka:
    bootstrap-servers: 10.111.30.8:9092,10.111.30.9:9092,10.111.30.4:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: test
      enable-auto-commit: true
      auto-commit-interval: 1000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 500MB
      enabled: true




redis:
  host: 10.111.30.4
  port: 6379
  maxIdle: 150
  maxActive: 1000
  maxWait: 5000
  testOnBorrow: true
  pass: MyCj@tNsldjCfU  

logging:
  level:
    io.swagger.models.parameters.AbstractSerializableParameter: error


tcpServe:
  jt808:
    serveIp: 172.16.4.142
    serverPort: 9998

filePath: /data/jtb/test/
readFilePath: /data/jtb/test/1.xlsx
exportFilePath: /data/jtb/jao/
exportFileName: 1.xlsx
#spring:
#  application:
#    name: producer
#  cloud:
#    stream:
#      kafka:
#        binder:
#          brokers: localhost:9092         #Kafka的消息中间件服务器
#          zk-nodes: localhost:2181        #Zookeeper的节点，如果集群，后面加,号分隔
#          auto-create-topics: true        #如果设置为false,就不会自动创建Topic 有可能你Topic还没创建就直接调用了。
#      bindings:
#        output:      #这里用stream给我们提供的默认output，后面会讲到自定义output
#          destination: stream-demo    #消息发往的目的地
#          content-type: text/plain    #消息发送的格式，接收端不用指定格式，但是发送端要
